<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-us" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">ac5610e14e35343352c9459b3e335b10c5a31637</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <group id="101">
        <unit id="101">
          <originalData />
          <segment state="initial" id="101">
            <source>ms.ContentId: 526e4f1a-2936-4c61-b3be-d41b4cf9d10f</source>
          </segment>
        </unit>
        <unit id="102">
          <originalData />
          <segment state="initial" id="102">
            <source>title: About Windows Server Containers</source>
          </segment>
        </unit>
        <unit id="103">
          <originalData />
          <segment state="initial" id="103">
            <source>Windows Server Containers</source>
          </segment>
        </unit>
        <unit id="104">
          <originalData />
          <segment state="initial" id="104">
            <source>Applications fuel innovation in the cloud and mobile era.</source>
          </segment>
        </unit>
        <unit id="105">
          <originalData />
          <segment state="initial" id="105">
            <source>Containers, and the ecosystem that is developing around them, will empower software developers to create the next generation of applications experiences.</source>
          </segment>
        </unit>
        <unit id="106">
          <originalData>
            <data id="id0">&lt;linkText&gt;</data>
            <data id="id1">&lt;/linkText&gt;</data>
            <data id="id2">&lt;title&gt;</data>
            <data id="id3">&lt;/title&gt;</data>
            <data id="id4">&lt;link&gt;</data>
            <data id="id5">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="106">
            <source>Watch a short overview: <pc dataRefEnd="id1" dataRefStart="id0" id="106-2CapsExtId2">Windows-based containers: Modern app development with enterprise-grade control</pc><pc dataRefEnd="id3" dataRefStart="id2" id="106-2CapsExtId3"></pc><pc dataRefEnd="id5" dataRefStart="id4" id="106-2CapsExtId1"></pc>.</source>
          </segment>
        </unit>
        <unit id="107">
          <originalData />
          <segment state="initial" id="107">
            <source>What are containers?</source>
          </segment>
        </unit>
        <unit id="108">
          <originalData />
          <segment state="initial" id="108">
            <source>They are an isolated, resource controlled, and portable operating environment.</source>
          </segment>
        </unit>
        <unit id="109">
          <originalData />
          <segment state="initial" id="109">
            <source>Basically, a container is an isolated place where an application can run without affecting the rest of the system and without the system affecting the application.</source>
          </segment>
        </unit>
        <unit id="110">
          <originalData />
          <segment state="initial" id="110">
            <source>Containers are the next evolution in virtualization.</source>
          </segment>
        </unit>
        <unit id="111">
          <originalData />
          <segment state="initial" id="111">
            <source>If you were inside a container, it would look very much like you were inside a freshly installed physical computer or a virtual machine.</source>
          </segment>
        </unit>
        <unit id="112">
          <originalData>
            <data id="id0">&lt;linkText&gt;</data>
            <data id="id1">&lt;/linkText&gt;</data>
            <data id="id2">&lt;title&gt;</data>
            <data id="id3">&lt;/title&gt;</data>
            <data id="id4">&lt;link&gt;</data>
            <data id="id5">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="112">
            <source>And, to <pc dataRefEnd="id1" dataRefStart="id0" id="112-2CapsExtId2">Docker</pc><pc dataRefEnd="id3" dataRefStart="id2" id="112-2CapsExtId3"></pc><pc dataRefEnd="id5" dataRefStart="id4" id="112-2CapsExtId1"></pc>, a Windows Server Container can be managed in the same way as any other container.</source>
          </segment>
        </unit>
        <unit id="113">
          <originalData />
          <segment state="initial" id="113">
            <source>Container Fundamentals</source>
          </segment>
        </unit>
        <unit id="114">
          <originalData />
          <segment state="initial" id="114">
            <source>When you begin working with containers you will notice many similarities between a container and a virtual machine.</source>
          </segment>
        </unit>
        <unit id="115">
          <originalData />
          <segment state="initial" id="115">
            <source>A container runs an operating system, has a file system and can be accessed over a network just as if it was a physical or virtual computer system.</source>
          </segment>
        </unit>
        <unit id="116">
          <originalData />
          <segment state="initial" id="116">
            <source>That said, the technology and concepts behind containers are very different from that of virtual machines.</source>
          </segment>
        </unit>
        <unit id="117">
          <originalData>
            <data id="id0">&lt;linkText&gt;</data>
            <data id="id1">&lt;/linkText&gt;</data>
            <data id="id2">&lt;title&gt;</data>
            <data id="id3">&lt;/title&gt;</data>
            <data id="id4">&lt;link&gt;</data>
            <data id="id5">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="117">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="117-1CapsExtId2">This blog post</pc>
              <pc dataRefEnd="id3" dataRefStart="id2" id="117-1CapsExtId3">
              </pc>
              <pc dataRefEnd="id5" dataRefStart="id4" id="117-1CapsExtId1">
              </pc> by Mark Russinovich explains containers well.</source>
          </segment>
        </unit>
        <unit id="118">
          <originalData />
          <segment state="initial" id="118">
            <source>The following key concepts will be helpful as you begin creating and working with Windows Server Containers.</source>
          </segment>
        </unit>
        <unit id="119">
          <originalData>
            <data id="id0">&lt;strong&gt;</data>
            <data id="id1">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="119">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="119-1">Container Host:</pc> Physical or Virtual computer system configured with the Windows Server Container feature.</source>
          </segment>
        </unit>
        <unit id="120">
          <originalData />
          <segment state="initial" id="120">
            <source>The container host will run one or more Windows Server Containers.</source>
          </segment>
        </unit>
        <unit id="121">
          <originalData>
            <data id="id0">&lt;strong&gt;</data>
            <data id="id1">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="121">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="121-1">Container Image:</pc> As modifications are made to a containers file system or registry, such as with software installation they are captured in the sandbox.</source>
          </segment>
        </unit>
        <unit id="122">
          <originalData />
          <segment state="initial" id="122">
            <source>In many cases you may want to capture this state such that new containers can be created that inherit these changes.</source>
          </segment>
        </unit>
        <unit id="123">
          <originalData />
          <segment state="initial" id="123">
            <source>That’s what an image is – once the container has stopped you can either discard that sandbox or you can convert it into a new container image.</source>
          </segment>
        </unit>
        <unit id="124">
          <originalData />
          <segment state="initial" id="124">
            <source>For example, let’s imagine that you have deployed a container from the Windows Server Core OS image.</source>
          </segment>
        </unit>
        <unit id="125">
          <originalData />
          <segment state="initial" id="125">
            <source>You then install MySQL into this container.</source>
          </segment>
        </unit>
        <unit id="126">
          <originalData />
          <segment state="initial" id="126">
            <source>Creating a new image from this container would act as a deployable version of the container.</source>
          </segment>
        </unit>
        <unit id="127">
          <originalData />
          <segment state="initial" id="127">
            <source>This image would only contain the changes made (MySQL), however would work as a layer on top of the Container OS Image.</source>
          </segment>
        </unit>
        <unit id="128">
          <originalData>
            <data id="id0">&lt;strong&gt;</data>
            <data id="id1">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="128">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="128-1">Sandbox:</pc> Once a container has been started, all write actions such as file system modifications, registry modifications or software installations are captured in this ‘sandbox’ layer.</source>
          </segment>
        </unit>
        <unit id="129">
          <originalData>
            <data id="id0">&lt;strong&gt;</data>
            <data id="id1">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="129">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="129-1">Container OS Image:</pc> Containers are deployed from images.</source>
          </segment>
        </unit>
        <unit id="130">
          <originalData />
          <segment state="initial" id="130">
            <source>The container OS image is the first layer in potentially many image layers that make up a container.</source>
          </segment>
        </unit>
        <unit id="131">
          <originalData />
          <segment state="initial" id="131">
            <source>This image provides the operating system environment.</source>
          </segment>
        </unit>
        <unit id="132">
          <originalData />
          <segment state="initial" id="132">
            <source>A Container OS Image is Immutable, it cannot be modified.</source>
          </segment>
        </unit>
        <unit id="133">
          <originalData>
            <data id="id0">&lt;strong&gt;</data>
            <data id="id1">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="133">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="133-1">Container Repository:</pc> Each time a container image is created the container image and its dependencies are stored in a local repository.</source>
          </segment>
        </unit>
        <unit id="134">
          <originalData />
          <segment state="initial" id="134">
            <source>These images can be reused many times on the container host.</source>
          </segment>
        </unit>
        <unit id="135">
          <originalData />
          <segment state="initial" id="135">
            <source>The container images can also be stored in a public or private repository such as DockerHub so that they can be used across many different container host.</source>
          </segment>
        </unit>
        <unit id="136">
          <originalData>
            <data id="id0">&lt;strong&gt;</data>
            <data id="id1">&lt;/strong&gt;</data>
          </originalData>
          <segment state="initial" id="136">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="136-1">Container Management Technology:</pc> Windows Server Containers can be managed using both PowerShell and Docker.</source>
          </segment>
        </unit>
        <unit id="137">
          <originalData />
          <segment state="initial" id="137">
            <source>With either one of these tools you can create new containers, container images as well as manage the container lifecycle.</source>
          </segment>
        </unit>
        <unit id="138">
          <originalData>
            <data id="id0">&lt;html&gt;</data>
            <data id="id1">&lt;/html&gt;</data>
            <data id="id2">&lt;linkText&gt;</data>
            <data id="id3">&lt;/linkText&gt;</data>
            <data id="id4">&lt;html&gt;</data>
            <data id="id5">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="138">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="138-1">
              </pc>
              <pc dataRefEnd="id3" dataRefStart="id2" id="138-2">
              </pc>
              <pc dataRefEnd="id5" dataRefStart="id4" id="138-3">
              </pc>
            </source>
          </segment>
        </unit>
        <unit id="139">
          <originalData />
          <segment state="initial" id="139">
            <source>Containers for Developers</source>
          </segment>
        </unit>
        <unit id="140">
          <originalData />
          <segment state="initial" id="140">
            <source>From a developer’s desktop to a testing machine to a set of production machines, a Docker image can be created that will deploy identically across any environment in seconds.</source>
          </segment>
        </unit>
        <unit id="141">
          <originalData />
          <segment state="initial" id="141">
            <source>This story has created a massive and growing ecosystem of applications packaged in Docker containers, with DockerHub, the public containerized-application registry that Docker maintains, currently publishing more than 180,000 applications in the public community repository.</source>
          </segment>
        </unit>
        <unit id="142">
          <originalData />
          <segment state="initial" id="142">
            <source>When you containerize an app, only the app and the components needed to run the app are combined into an "image".</source>
          </segment>
        </unit>
        <unit id="143">
          <originalData />
          <segment state="initial" id="143">
            <source>Containers are then created from this image as you need them.</source>
          </segment>
        </unit>
        <unit id="144">
          <originalData />
          <segment state="initial" id="144">
            <source>You can also use an image as a baseline to create another image, making image creation even faster.</source>
          </segment>
        </unit>
        <unit id="145">
          <originalData />
          <segment state="initial" id="145">
            <source>Multiple containers can share the same image, which means containers start very quickly and use fewer resources.</source>
          </segment>
        </unit>
        <unit id="146">
          <originalData />
          <segment state="initial" id="146">
            <source>For example, you can use containers to spin up light-weight and portable app components – or ‘micro-services’ – for distributed apps and quickly scale each service separately.</source>
          </segment>
        </unit>
        <unit id="147">
          <originalData />
          <segment state="initial" id="147">
            <source>Because the container has everything it needs to run your application, they are very portable and can run on any machine that is running Windows Server 2016.</source>
          </segment>
        </unit>
        <unit id="148">
          <originalData />
          <segment state="initial" id="148">
            <source>You can create and test containers locally, then deploy that same container image to your company's private cloud, public cloud or service provider.</source>
          </segment>
        </unit>
        <unit id="149">
          <originalData />
          <segment state="initial" id="149">
            <source>The natural agility of Containers supports modern app development patterns in large scale, virtualized and cloud environments.</source>
          </segment>
        </unit>
        <unit id="150">
          <originalData />
          <segment state="initial" id="150">
            <source>With containers, developers can build an app in any language.</source>
          </segment>
        </unit>
        <unit id="151">
          <originalData />
          <segment state="initial" id="151">
            <source>These apps are completely portable and can run anywhere - laptop, desktop, server, private cloud, public cloud or service provider - without any code changes.</source>
          </segment>
        </unit>
        <unit id="152">
          <originalData />
          <segment state="initial" id="152">
            <source>Containers helps developers build and ship higher-quality applications, faster.</source>
          </segment>
        </unit>
        <unit id="153">
          <originalData />
          <segment state="initial" id="153">
            <source>Containers for IT Professionals</source>
          </segment>
        </unit>
        <unit id="154">
          <originalData />
          <segment state="initial" id="154">
            <source>IT Professionals can use containers to provide standardized environments for their development, QA, and production teams.</source>
          </segment>
        </unit>
        <unit id="155">
          <originalData />
          <segment state="initial" id="155">
            <source>They no longer have to worry about complex installation and configuration steps.</source>
          </segment>
        </unit>
        <unit id="156">
          <originalData />
          <segment state="initial" id="156">
            <source>By using containers, systems administrators abstract away differences in OS installations and underlying infrastructure.</source>
          </segment>
        </unit>
        <unit id="157">
          <originalData />
          <segment state="initial" id="157">
            <source>Containers help admins create an infrastructure that is simpler to update and maintain.</source>
          </segment>
        </unit>
        <unit id="158">
          <originalData />
          <segment state="initial" id="158">
            <source>Video Overview</source>
          </segment>
        </unit>
        <unit id="159">
          <originalData />
          <segment state="initial" id="159">
            <source>&lt;iframe</source>
          </segment>
        </unit>
        <unit id="160">
          <originalData>
            <data id="id0">&lt;html&gt;</data>
            <data id="id1">&lt;/html&gt;</data>
          </originalData>
          <segment state="initial" id="160">
            <source>src="https://channel9.msdn.com/Blogs/containers/Containers-101-with-Microsoft-and-Docker/player" width="960" height="540" allowFullScreen="true" frameBorder="0" scrolling="no"&gt;<pc dataRefEnd="id1" dataRefStart="id0" id="160-2"></pc></source>
          </segment>
        </unit>
        <unit id="161">
          <originalData />
          <segment state="initial" id="161">
            <source>Try Windows Server Containers</source>
          </segment>
        </unit>
        <unit id="162">
          <originalData>
            <data id="id0">&lt;linkText&gt;</data>
            <data id="id1">&lt;/linkText&gt;</data>
            <data id="id2">&lt;title&gt;</data>
            <data id="id3">&lt;/title&gt;</data>
            <data id="id4">&lt;link&gt;</data>
            <data id="id5">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="162">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="162-1CapsExtId2">Get started with Windows Server Containers in Windows Azure</pc>
              <pc dataRefEnd="id3" dataRefStart="id2" id="162-1CapsExtId3">
              </pc>
              <pc dataRefEnd="id5" dataRefStart="id4" id="162-1CapsExtId1">
              </pc>
            </source>
          </segment>
        </unit>
        <unit id="163">
          <originalData>
            <data id="id0">&lt;linkText&gt;</data>
            <data id="id1">&lt;/linkText&gt;</data>
            <data id="id2">&lt;title&gt;</data>
            <data id="id3">&lt;/title&gt;</data>
            <data id="id4">&lt;link&gt;</data>
            <data id="id5">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="163">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="163-1CapsExtId2">Get started with Windows Server Containers Locally</pc>
              <pc dataRefEnd="id3" dataRefStart="id2" id="163-1CapsExtId3">
              </pc>
              <pc dataRefEnd="id5" dataRefStart="id4" id="163-1CapsExtId1">
              </pc>
            </source>
          </segment>
        </unit>
        <unit id="164">
          <originalData>
            <data id="id0">&lt;linkText&gt;</data>
            <data id="id1">&lt;/linkText&gt;</data>
            <data id="id2">&lt;title&gt;</data>
            <data id="id3">&lt;/title&gt;</data>
            <data id="id4">&lt;link&gt;</data>
            <data id="id5">&lt;/link&gt;</data>
          </originalData>
          <segment state="initial" id="164">
            <source>
              <pc dataRefEnd="id1" dataRefStart="id0" id="164-1CapsExtId2">Back to Container Home</pc>
              <pc dataRefEnd="id3" dataRefStart="id2" id="164-1CapsExtId3">
              </pc>
              <pc dataRefEnd="id5" dataRefStart="id4" id="164-1CapsExtId1">
              </pc>
            </source>
          </segment>
        </unit>
      </group>
    </group>
  </file>
</xliff>